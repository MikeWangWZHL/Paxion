 # Copyright (c) 2022, salesforce.com, inc.
 # All rights reserved.
 # SPDX-License-Identifier: BSD-3-Clause
 # For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
model:
  vl_dm_model_config:
    arch: blip_vl_dynamicmodel_pretrain_v3 # 

    model_type: base
    pretrained: "/shared/nas/data/m1/wangz3/phy-lm-vid/src/output/ego4d_dynamic_modeling_egovlp_v1_downsampled/pretrain_model_v2/20230120105/checkpoint_best.pth"
    load_pretrained: True

    queue_size: 57600
    alpha: 0.2 # origianl 0.4
    image_size: 224
    # image_size: 512

    objectives: ["FDMC","BDMC","IDMC"]
    loss_weighting: [1.0,1.0,1.0]
    using_noun_verb_target_masking: False

    text_hidden_size: 768

  diffusion_model_config:
    # pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    # pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1"
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    revision: null
    non_ema_revision: null
    resolution: 224
    # resolution: 512
    hidden_size: 768
    max_position_embeddings: 77

  mixed_precision: fp16
  if_freeze_vl_dm_model: True
  
  pretrained: null
  load_pretrained: null

datasets:
  ## downsampled
  vl_dynamic_diffusion_dataset_downsampled_224x224_5fps: # using subset of egoclip for training and egomcq for validation
    vis_processor:
        train:
          name: "vl_dynamic_blip_ego4d_image_eval" # no additional augmentation for matching with processor from diffusion model
          image_size: 224
          # image_size: 512
        eval:
          name: "vl_dynamic_blip_ego4d_image_eval"
          image_size: 224
          # image_size: 512
    text_processor:
        train:
          name: "vl_dynamic_ego4d_text"
        eval:
          name: "vl_dynamic_ego4d_text"
    # sample a subset of k instances
    k: null
    k_eval: 500
    # other arguements
    frm_sampling_strategy: "firstlast" # take the first and last frame as start and end state
    num_frm: 2
    train_frame_height: 224
    train_frame_width: 224
    eval_frame_height: 224
    eval_frame_width: 224
    # train_frame_height: 512
    # train_frame_width: 512
    # eval_frame_height: 512
    # eval_frame_width: 512
    neg_sampling_same_clip: 0 # sample k negative samples from the same clip for each instance
    fps: 5 # IMPORTANT: if downsampled, use 5 fps

  ## original size
  # vl_dynamic_diffusion_dataset: # using subset of egoclip for training and egomcq for validation
  #   vis_processor:
  #       train:
  #         name: "vl_dynamic_blip_ego4d_image_eval" # no additional augmentation for matching with processor from diffusion model
  #         image_size: 512
  #       eval:
  #         name: "vl_dynamic_blip_ego4d_image_eval"
  #         image_size: 512
  #   text_processor:
  #       train:
  #         name: "vl_dynamic_ego4d_text"
  #       eval:
  #         name: "vl_dynamic_ego4d_text"
  #   # sample a subset of k instances
  #   k: null
  #   k_eval: 500 # take a subset of 100 eval instances
  #   # other arguements
  #   frm_sampling_strategy: "firstlast" # take the first and last frame as start and end state
  #   num_frm: 2
  #   train_frame_height: 512
  #   train_frame_width: 512
  #   eval_frame_height: 512
  #   eval_frame_width: 512
  #   neg_sampling_same_clip: 0 # sample k negative samples from the same clip for each instance

  #   fps: 30 # IMPORTANT: if downsampled, use 5 fps


run:
  # use custom runner (default is runner_base)
  runner: runner_base_vl_dynamic_modeling
  # task
  task: vl_dynamic_stable_diffusion
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-5
  min_lr: 0
  weight_decay: 1e-2
  max_epoch: 1
  
  batch_size_train: 4
  batch_size_eval: 4
  
  num_workers: 8

  seed: 42
  output_dir: "/shared/nas/data/m1/wangz3/phy-lm-vid/src/output/ego4d_dynamic_modeling_egovlp_v1_downsampled/vl_dm_stable_diffusion"

  amp: False
  # amp: True
  resume_ckpt_path: null

  evaluate: False 
  train_splits: ["train"]
  valid_splits: ["val"]
  # test_splits: ["test"]

  device: "cuda"
  world_size: 1
  dist_url: "env://"
  distributed: True
